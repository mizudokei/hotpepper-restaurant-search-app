# 1. ベースとなるOSイメージを指定
# 公式のPython 3.11の軽量イメージ（slim）を使用します。
FROM python:3.11-slim

# 2. 作業ディレクトリを設定
# コンテナ内の /app ディレクトリで、以降のコマンドを実行します。
WORKDIR /app

# 3. 依存ライブラリの定義ファイルをコピー
# まず、requirements.txtだけをコピーすることで、
# ライブラリに変更がない場合はキャッシュが利用され、ビルドが高速化します。
COPY requirements.txt .

# 4. 依存ライブラリをインストール
# --no-cache-dir オプションは、不要なキャッシュを保存せず、イメージサイズを小さく保ちます。
RUN pip install --no-cache-dir -r requirements.txt

# 5. アプリケーションのソースコードをコピー
# ローカルの現在のディレクトリ（.）の中身を、コンテナの/appディレクトリにコピーします。
COPY . .

# 6. アプリケーションの起動コマンドを指定
# コンテナが起動した際に、このコマンドが実行されます。
# gunicornという本番環境で推奨されるWSGIサーバーを使って、app/__init__.py内の'app'を起動します。
# 0.0.0.0:5000 でリッスンすることで、コンテナの外部からアクセス可能になります。
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "app:create_app()"]
